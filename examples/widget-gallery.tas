fun Title(text) {
  Text {
    text:   text
    align:  "center"
    weight: "light"
    size:   2
  }
}

fun GalleryText() {
  Column {
    Title { text: "Text" }

    Text { text: "Simple text" }

    Text { text: "A little bigger", size: 1.1 }

    Text {
      text:   "And bold"
      size:   1.1
      weight: "bold"
    }

    Text {
      text:   "Bigger and light"
      size:   1.5
      weight: "light"
    }

    Text {
      text:   "With a different color"
      size:   1.5
      weight: "light"
      color:  "teal"
    }

    Text {
      text:   "Centered !"
      size:   1.5
      weight: "light"
      color:  "teal"
      align:  "center"
      copy:   true
    }

    Text {
      text:         "Preformated !"
      preformatted: true
    }
  }
}

fun GalleryInputText() {
  var value = ""

  Column {
    Title { text: "InputText" }

    InputText { bindTo: value }

    InputText {
      bindTo:      value
      placeholder: "With placeholder"
    }

    InputText { bindTo: value, multiline: true }

    InputText { bindTo: value, disabled: true }

    InputText {
      bindTo:      value
      placeholder: "With placeholder"
      disabled:    true
    }

    InputText {
      bindTo:    value
      multiline: true
      disabled:  true
    }

  }
}

fun GalleryCheckbox() {
  var value = false

  Title { text: "CheckBox Switch" }
  Row { CheckBox { bindTo: value } }
  Row { Switch { bindTo: value } }
  Row {
    CheckBox { bindTo: value, disabled: true }
  }
  Row {
    Switch { bindTo: value, disabled: true }
  }
}

fun GalleryButton() {
  var value = false

  Title { text: "Button" }
  Button { text: "Click me" }
  Button {
    text:    "Confirm"
    confirm: "Are you sure ?"
    onClick: () => log("Confirmed !")
  }
  Button { text: "Click me", secondary: true }
  Button { text: "Click me", disabled: true }
  Button {
    text:      "Click me"
    secondary: true
    disabled:  true
  }
}

fun GalleryLink() {
  var value = false

  Title { text: "Link" }
  Link { url: "https://www.example.com" }
}

fun GalleryPager() {
  var currentPage = 1

  Title { text: "Pager" }
  Pager {
    max:     100
    perPage: 10
    bindTo:  currentPage
  }
}

fun GallerySelect() {
  var values = ["Red", "Green", {value: "#00F", label: "Blue"}]
  var value = "Red"
  var value2

  Title { text: "Select" }
  Select {
    options:     values
    placeholder: "Color"
    bindTo:      value
  }
  Text { text: "Selected: " + value }
  Select {
    options:     values
    placeholder: "Color"
    bindTo:      value
    disabled:    true
  }
  Select {
    options:     values
    placeholder: "Color"
    bindTo:      value2
  }
}

fun GalleryTable() {
  var useRemaining = false
  var noHeader = false
  var striped = true
  var noHighlight = false
  var bordered = false

  let data = [
    {name: "Toto", age: "32"}
    {name: "Tata", age: "40"}
    {name: "Titi", age: "13"}
    {name: "Tutu", age: "132", secret: true}
  ]

  Title { text: "Table" }

  Row {
    CheckBox { bindTo: useRemaining }
    Text {
      text: "Name column must use remaining space"
    }
  }

  Row {
    CheckBox { bindTo: noHeader }
    Text { text: "No header" }
  }

  Row {
    CheckBox { bindTo: striped }
    Text { text: "Striped" }
  }

  Row {
    CheckBox { bindTo: noHighlight }
    Text { text: "No Highlight" }
  }

  Row {
    CheckBox { bindTo: bordered }
    Text { text: "Bordered" }
  }

  Table {
    _key:        (row) => row.name
    noHeader:    noHeader
    striped:     striped
    noHighlight: noHighlight
    bordered:    bordered
    columns:     [
      {
        description:  "Name"
        display:      (row) => Text { text: row.name }
        useRemaining: useRemaining
      }
      {
        description: "Age"
        display:     (row) => Text { text: row.age }
      }
    ]
    values:      data
  }

  Table {
    values:      data
    noHeader:    noHeader
    noHighlight: noHighlight
    bordered:    bordered
    striped:     striped
  }

  Table {
    noHeader:    noHeader
    noHighlight: noHighlight
    striped:     striped
    bordered:    bordered
    columns:     [
      "name"
      {
        description: "Age"
        display:     (row) => Text { text: row.age + " years old" }
      }
    ]
    values:      data
  }
}

fun GalleryThemeSelector() {
  Title { text: "Theme selector" }

  Column {
    Button {
      text:    "HTML"
      onClick: () => set_system_property("theme", "HTML")
    }
    Button {
      text:    "Toy Box"
      onClick: () => set_system_property("theme", "Toy Box")
    }
    Button {
      text:    "Bootstrap"
      onClick: () => set_system_property("theme", "Bootstrap")
    }
    Button {
      text:    "Bootstrap Dark"
      onClick: () => set_system_property("theme", "Bootstrap Dark")
    }
    Button {
      text:    "NES.css"
      onClick: () => set_system_property("theme", "NES.css")
    }
  }
}

Column {
  Debug { value: "Debug enabled !" }
  Row {
    Box { width: "360px", GalleryInputText {} }
    Box { width: "360px", GalleryText {} }
    Box { width: "360px", GalleryCheckbox {} }
    Box { width: "360px", GalleryButton {} }
    Box { width: "360px", GalleryLink {} }
    Box { width: "360px", GalleryPager {} }
    Box { width: "360px", GallerySelect {} }
    Box { width: "360px", GalleryTable {} }
    Box {
      width: "360px"

      GalleryThemeSelector {}
    }
  }
}
